import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import { useWeatherData } from "@/hooks/useWeatherData ";

import { SearchBox, WeatherCard } from "@/components";
const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [userInput, setUserInput] = useState("");
  const [showForecast, setShowForecast] = useState(false);

  const { data, error, isLoading, mutate, isValidating } =
    useWeatherData(userInput);

  return (
    <>
      <Head>
        <title>oneweather || {userInput}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <body className="max-w-5xl bg-blue-50  p-5 mx-auto ">
        <div className="search__container">
          <SearchBox userInput={userInput} setUserInput={setUserInput} />

          {
            // show forecast option if user has searched for a city
            userInput && (
              <div className="flex items-center mb-4">
                <input
                  id="default-checkbox"
                  type="checkbox"
                  checked={showForecast}
                  onChange={(e) => setShowForecast(e.target.checked)}
                  value=""
                  className="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                />
                <label
                  htmlFor="default-checkbox"
                  className="ml-2 text-sm font-medium text-gray-400 dark:text-gray-300"
                >
                  Show Forecast for 5 days
                </label>
              </div>
            )
          }

          {!isLoading && data && (
            <WeatherCard showForecast={showForecast} weatherData={data} />
          )}

          <div className="error__container mx-auto flex ">
            {isLoading && (
              <p className="text-blue-300 font-extrabold text-2xl mx-auto my-10">
                Loading...
              </p>
            )}
          </div>

          <div className="error__container mx-auto flex ">
            {error && (
              <p className="text-red-300 font-extrabold text-2xl mx-auto my-10">
                {error.message}
              </p>
            )}
          </div>
        </div>
      </body>
    </>
  );
}
