import { useState } from "react";
import Head from "next/head";

import { Inter } from "next/font/google";
import { useWeatherData } from "@/hooks/useWeatherData ";
import { SearchBox, WeatherCard } from "@/components";
import ContentLoader from "react-content-loader";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [userInput, setUserInput] = useState("");
  const [showForecast, setShowForecast] = useState(false);
  const [tempUnit, setTempUnit] = useState("Metric");

  const { data, error, isLoading, mutate, isValidating, setIsMounted } =
    useWeatherData(userInput, tempUnit);

  const handleSubmit = (e: any) => {
    if (userInput === "") {
      alert("Please enter a city name");
      return;
    }

    e.preventDefault();

    setIsMounted(true);
  };

  return (
    <div>
      <Head>
        <title>oneweather || {userInput}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className=" ">
        <div className="max-w-5xl w-screen h-screen p-5 mx-auto py-20 ">
          <div className="search__container">
            <div className="search__container__top lg:flex  mx-auto items-center justify-center lg:space-x-3">
              <SearchBox
                userInput={userInput}
                setUserInput={setUserInput}
                handleSubmit={handleSubmit}
                setIsMounted={setIsMounted}
              />

              <select
                className="w-20 h-10 rounded-lg border-2 mx-auto justify-center flex items-center border-gray-300 focus:outline-none outline-none focus:ring-2  focus:border-transparent"
                defaultValue="metric"
                onChange={(e) => {
                  setIsMounted(false);
                  setTempUnit(e.target.value);
                }}
              >
                <option value="Metric">Celsius</option>
                <option value="Imperial">Fahrenheit</option>
              </select>
            </div>

            {
              // show forecast option if user has searched for a city
              userInput && (
                <div className="flex justify-center my-10 mb-4 mx-auto items-center">
                  <input
                    id="default-checkbox"
                    type="checkbox"
                    checked={showForecast}
                    onChange={(e) => setShowForecast(e.target.checked)}
                    value=""
                    className="w-4 h-4 text-blue-600 bg-gray-100 rounded border-gray-300 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600"
                  />
                  <label
                    htmlFor="default-checkbox"
                    className="ml-2 text-sm font-medium text-gray-400 dark:text-gray-300"
                  >
                    Show Forecast for 5 days
                  </label>
                </div>
              )
            }

            {userInput && !isLoading && data && (
              <WeatherCard
                showForecast={showForecast}
                weatherData={data}
                temperatureUnit={tempUnit}
              />
            )}

            <div className="error__container mx-auto flex ">
              {isLoading && !error && (
                <ContentLoader
                  speed={1}
                  width={490}
                  height={378}
                  viewBox="0 0 390 378"
                  backgroundColor="#fff"
                  foregroundColor="#ecebeb"
                  className="mx-auto"
                >
                  <rect x="552" y="484" rx="0" ry="0" width="127" height="84" />
                  <rect x="6" y="61" rx="23" ry="23" width="386" height="176" />
                </ContentLoader>
              )}
            </div>

            <div className="error__container mx-auto flex ">
              {error && (
                <p className="text-red-300 font-extrabold text-2xl mx-auto my-10">
                  {error.message}
                </p>
              )}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
